apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: PROJECT
  name: PROJECT
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: PROJECT
  template:
    metadata:
      labels:
        app: PROJECT
    spec:
      imagePullSecrets:
      - name: docker-registry
      containers:
        - name: PROJECT
          image: REGISTRY/PROJECT:TAG
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8080
              name: "http"
              protocol: "TCP"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: "/actuator/info"
              port: 8080
              scheme: "HTTP"
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: "/actuator/info"
              port: 8080
              scheme: "HTTP"
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: PROJECT
  name: PROJECT
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: PROJECT
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: PROJECT
  namespace: default
  labels:
    app: PROJECT
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`test.wzxmt.com`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: PROJECT
      port: 9097
